package base;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.time.Duration;
import java.util.Properties;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class TestBase {
	private static final Logger logger = LogManager.getLogger();
	public static WebDriver driver;
	public static Properties prop;
	public String ExcelPath = "C:\\Users\\Asus\\eclipse-workspace\\TestLUMA\\src\\main\\java\\config\\config.properties";

	public TestBase() {
		FileInputStream file = null;
		prop = new Properties();

		try {
			file = new FileInputStream(ExcelPath);
			prop.load(file);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public static void initialization(String browser) {
		System.out.println("Browser name is " + browser);
		switch (browser) {
		case "chrome":
			logger.info("invoking chrome browser");
			WebDriverManager.chromedriver().setup();
			driver = new ChromeDriver();
			
			break;

		case "firefox":
			logger.info("invoking firefox browser");
			WebDriverManager.firefoxdriver().setup();
			driver = new FirefoxDriver();
			break;

		case "edge":
			logger.info("invoking edge browser");
			WebDriverManager.edgedriver().setup();
			driver = new EdgeDriver();
			break;

		case "headless":
			logger.info("invoking headless chrome browser");
			WebDriverManager.chromedriver().setup();
			ChromeOptions options = new ChromeOptions();
			options.addArguments("headless");
			driver = new ChromeDriver(options);
			break;

		default:
			logger.fatal("invalid browser name "+browser);
			break;
		}
		driver.get(prop.getProperty("url"));
		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(20));
	}
}
